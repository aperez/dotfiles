#+TITLE: Emacs Configuration
#+AUTHOR: Alexandre Perez
#+OPTIONS: toc:nil num:nil

This [[http://orgmode.org/][=org-mode=]] document contains my [[https://en.wikipedia.org/wiki/Literate_programming][literate]] Emacs configuration.

* Bootstrap =org-mode= in [[./init.el][init.el]]
  File [[./init.el][init.el]] bootsraps the configuration. It sets up =use-package= along with
  package repositories, and installs a newer version of =org-mode=. After that,
  this document is loaded and evaluated via =org-babel-load-file=.
  #+INCLUDE: init.el src emacs-lisp

* Defaults
  Emacs supports a [[https://www.emacswiki.org/emacs/EmacsClient][client-server architecture]], allowing this configuration to
  effectivelly be only instanced once by the Emacs server. I normally use =emacs
  --daemon= or =emacsclient -a ""= to start the server, but in case it hasn't
  started yet, let us start it now:
  #+BEGIN_SRC emacs-lisp
    (require 'server)
    (unless (server-running-p)
      (server-start))
  #+END_SRC

  Hide the menu, toolbar and scroll bar:
  #+BEGIN_SRC emacs-lisp
    (menu-bar-mode -1)
    (tool-bar-mode 0)
    (scroll-bar-mode -1)
  #+END_SRC

  Use spaces instead of tabs and set tab width as 4 spaces:
  #+BEGIN_SRC emacs-lisp
    (setq-default indent-tabs-mode nil)
    (setq tab-width 4)
  #+END_SRC

  Show line numbers next to the left fringe:
  #+BEGIN_SRC emacs-lisp
    (global-linum-mode 1)
  #+END_SRC

  Enable soft word wrap instead of truncating lines:
  #+BEGIN_SRC emacs-lisp
    (setq-default word-wrap t)
  #+END_SRC

  Set the number of columns beyound which line-wrapping happens to 80:
  #+BEGIN_SRC emacs-lisp
    (setq-default fill-column 80)
  #+END_SRC

  Stop creating =backup~= and =#autosave#= files. I suspect I will eventually
  turn on the backup feature, possibly using a temporary directory to store
  them, but let's leave it off for now:
  #+BEGIN_SRC emacs-lisp
      (setq make-backup-files nil)
      (setq auto-save-default nil)
  #+END_SRC

  Save Emacs' [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Saving-Customizations.html][customizations buffer]] configurations in a separate, untracked file
  so that it doesn't clutter [[./init.el][init.el]]:
  #+BEGIN_SRC emacs-lisp
    (setq custom-file (expand-file-name "custom.el" user-emacs-directory))
    (when (file-exists-p custom-file)
      (load custom-file))
  #+END_SRC

* Theming
  I like using [[http://adobe-fonts.github.io/source-code-pro/][Adobe Source Code Pro]] as my default font:
  #+BEGIN_SRC emacs-lisp
    (add-to-list 'default-frame-alist '(font . "Source Code Pro-14"))
  #+END_SRC

  [[https://github.com/belak/base16-emacs][Base16]] default-dark theme. I find my =custom-theme-set-faces= tweaks to
  =fringe= and =linum= colors make the theme more visually appealing when
  =linum-mode= is active:
  #+BEGIN_SRC emacs-lisp
    (use-package base16-theme
      :ensure t
      :config
      (load-theme 'base16-default-dark t)
      (custom-theme-set-faces 'base16-default-dark
        `(linum ((t (:background ,(plist-get base16-default-dark-colors :base00)
                     :foreground ,(plist-get base16-default-dark-colors :base02)))))
        `(fringe ((t (:background ,(plist-get base16-default-dark-colors :base01)))))
        ))
  #+END_SRC

  Fix the size of line numbers shown when =linum-mode= is active. Otherwise,
  when increasing the font size via =C-x C-+=, line numbers would overlap with
  the fringe ([[https://unix.stackexchange.com/a/238465][more info]]).
  #+BEGIN_SRC emacs-lisp
    (set-face-attribute 'linum nil :height 125)
  #+END_SRC

  [[https://github.com/milkypostman/powerline][Powerline]] theme for the mode line:
  #+BEGIN_SRC emacs-lisp
    (use-package powerline
      :ensure t
      :init
      (setq powerline-default-separator 'zigzag)
      :config
      (powerline-default-theme))
  #+END_SRC

* Packages
** Try
   [[https://github.com/larstvei/Try][=try=]] let's me try out Emacs packages without installing them:
   #+BEGIN_SRC emacs-lisp
     (use-package try
       :ensure t)
   #+END_SRC

** Which-key
   I fully recommend [[https://github.com/justbur/emacs-which-key][=which-key=]] to anyone starting to learn Emacs. It displays
   the keybindings following the currently entered incomplete command in a
   popup:
   #+BEGIN_SRC emacs-lisp
     (use-package which-key
       :ensure t
       :config (which-key-mode))
   #+END_SRC

** Magit
   Use the awesome [[https://github.com/magit/magit][=magit=]] git interface:
   #+BEGIN_SRC emacs-lisp
     (use-package magit
       :ensure t
       :bind ("C-x g" . magit-status))
   #+END_SRC

* Org-mode
  Open PDF links in =zathura=:
  #+BEGIN_SRC emacs-lisp
    (eval-after-load "org"
      '(progn
         (delete '("\\.pdf\\'" . default) org-file-apps)
         (add-to-list 'org-file-apps
                      '("\\.pdf::\\([0-9]+\\)\\'" . "zathura --fork \"%s\" -P %1"))
         (add-to-list 'org-file-apps
                      '("\\.pdf\\'" . "zathura --fork %s"))))
  #+END_SRC

* Load local configuration
  I keep local configurations that are not to be version controlled in a
  separate file.
  #+BEGIN_SRC emacs-lisp
    (setq local-file (expand-file-name "local.el" user-emacs-directory))
    (when (file-exists-p local-file)
      (load local-file))
  #+END_SRC

